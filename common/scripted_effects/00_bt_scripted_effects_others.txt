
#Beyond Typus work done by all contributors other than Draiocht
#	Example:
# 
#	example_effect = {
#		treasury = 100
#		add_adm_power = 50
#	}
#
#
#	In a script file:
#
#	effect = {
#		example_effect = yes
#	}

#############################################################
#############################################################
#############################################################
#Dub's work
#############################################################
#############################################################
#############################################################

add_or_spawn_center_of_trade = {
    if = { #If has center of trade, add level.
        limit = {
            OR = {
                province_has_center_of_trade_of_level = 1
                province_has_center_of_trade_of_level = 2
                province_has_center_of_trade_of_level = 3
            }
        }
        add_center_of_trade_level = $level$
    }
    else = {
        center_of_trade = $level$
    }
}

swap_ideas = { #Should really be this easy, i.e "swap_ideas = yes"
	if = {
		limit = { has_custom_ideas = no }
		country_event = { id = ideagroups.1 } #Swap Ideas
	}
}

create_interregnum_effect = {
    hidden_effect = {
        every_country = {
            limit = {
                marriage_with = ROOT
            }
            break_marriage = ROOT
        }
        kill_heir = yes
    }
    define_ruler = {
        name = "(Interregnum)"
        adm = 0
        dip = 0
        mil = 0
        fixed = yes
        regency = yes
    }
}

#Changes every reference of one culture into another for the purposes of switching culture group, like Celtica's uniting Brythonic & Gaelic into Celtic, or Manchu's Jurchen Evenk into Manchu Chinese.
#Usage: change_culture_group_effect = { old_culture=X new_culture=Y }
#old_culture: The culture to replace
#new_culture: The culture to replace the old culture with.
#Note: Lacks a tooltip and is a hidden effect, therefore requiring a custom_tooltip
change_culture_group_effect = {
	#Primary Culture
	every_country = {
		limit = { primary_culture = $old_culture$ }
		change_primary_culture = $new_culture$
	}
	#Accepted Culture
	every_country = {
		limit = { accepted_culture = $old_culture$ }
		remove_accepted_culture = $old_culture$
		add_accepted_culture = $new_culture$
	}
	#Provinces
	every_province = {
		limit = { culture = $old_culture$ }
		change_culture = $new_culture$
	}
	#Rulers
	every_country = {
		limit = { ruler_culture = $old_culture$ }
		set_ruler_culture = $new_culture$
	}
	#Heirs
	every_country = {
		limit = { heir_culture = $old_culture$ }
		set_heir_culture = $new_culture$
	}
	#Consorts
	every_country = {
		limit = { consort_culture = $old_culture$ }
		set_consort_culture = $new_culture$
	}
	#Advisors (Can't be done currently due to lack of EU4 effects)
}